{"ast":null,"code":"import _asyncToGenerator from \"/home/odraude/proyectos/cafe-las-flores/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, PLATFORM_ID, Injectable, Inject, EventEmitter, TemplateRef, Component, ContentChild, ViewChild, Input, Output, Optional, NgModule } from '@angular/core';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject, from } from 'rxjs';\nconst _c0 = [\"stripeElementRef\"];\n\nfunction StripeCardComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeCardNumberComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeCardExpiryComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeCardCvcComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeFpxBankComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeIdealBankComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeIbanComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeAuBankAccountComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nclass NgxStripeElementLoadingTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgxStripeElementLoadingTemplateDirective.ɵfac = function NgxStripeElementLoadingTemplateDirective_Factory(t) {\n  return new (t || NgxStripeElementLoadingTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgxStripeElementLoadingTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxStripeElementLoadingTemplateDirective,\n  selectors: [[\"\", \"ngxStripeLoadingTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxStripeElementLoadingTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxStripeLoadingTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nconst STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');\nconst STRIPE_OPTIONS = new InjectionToken('Stripe Options');\nconst NGX_STRIPE_VERSION = new InjectionToken('NGX_STRIPE_VERSION');\n\nclass StripeInstance {\n  constructor(version, loader, window, key, options) {\n    this.version = version;\n    this.loader = loader;\n    this.window = window;\n    this.key = key;\n    this.options = options;\n    this.stripe$ = new BehaviorSubject(undefined);\n    this.stripe = this.stripe$.asObservable().pipe(filter(stripe => Boolean(stripe)));\n    this.loader.asStream().pipe(filter(status => status.loaded === true), first(), map(() => this.window.getNativeWindow().Stripe)).subscribe(stripeInstance => {\n      const stripe = this.options ? stripeInstance(this.key, this.options) : stripeInstance(this.key);\n      stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n      this.stripe$.next(stripe);\n    });\n  }\n\n  getInstance() {\n    return this.stripe$.getValue();\n  }\n\n  elements(options) {\n    return this.stripe$.asObservable().pipe(filter(stripe => Boolean(stripe)), map(stripe => stripe.elements(options)), first());\n  }\n\n  redirectToCheckout(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.redirectToCheckout(options))), first());\n  }\n\n  confirmPayment(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayment(options))), first());\n  }\n\n  confirmAcssDebitPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAcssDebitPayment(clientSecret, data, options))), first());\n  }\n\n  confirmUsBankAccountPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmUsBankAccountPayment(clientSecret, data))), first());\n  }\n\n  confirmAlipayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAlipayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmAuBecsDebitPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAuBecsDebitPayment(clientSecret, data))), first());\n  }\n\n  confirmBancontactPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBancontactPayment(clientSecret, data, options))), first());\n  }\n\n  confirmBoletoPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBoletoPayment(clientSecret, data, options))), first());\n  }\n\n  confirmCardPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCardPayment(clientSecret, data, options))), first());\n  }\n\n  confirmCustomerBalancePayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCustomerBalancePayment(clientSecret, data, options))), first());\n  }\n\n  confirmEpsPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmEpsPayment(clientSecret, data, options))), first());\n  }\n\n  confirmFpxPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmFpxPayment(clientSecret, data, options))), first());\n  }\n\n  confirmGiropayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmGiropayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmGrabPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmGrabPayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmIdealPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmIdealPayment(clientSecret, data, options))), first());\n  }\n\n  confirmKlarnaPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmKlarnaPayment(clientSecret, data, options))), first());\n  }\n\n  confirmKonbiniPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmKonbiniPayment(clientSecret, data, options))), first());\n  }\n\n  confirmOxxoPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmOxxoPayment(clientSecret, data, options))), first());\n  }\n\n  confirmP24Payment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmP24Payment(clientSecret, data, options))), first());\n  }\n\n  confirmPayNowPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayNowPayment(clientSecret, data, options))), first());\n  }\n\n  confirmPayPalPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayPalPayment(clientSecret, data))), first());\n  }\n\n  confirmPromptPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPromptPayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmSepaDebitPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSepaDebitPayment(clientSecret, data))), first());\n  }\n\n  confirmSofortPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSofortPayment(clientSecret, data, options))), first());\n  }\n\n  confirmWechatPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmWechatPayPayment(clientSecret, data, options))), first());\n  }\n\n  handleCardAction(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardAction(clientSecret))), first());\n  }\n\n  verifyMicrodepositsForPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyMicrodepositsForPayment(clientSecret, data))), first());\n  }\n\n  collectBankAccountForPayment(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.collectBankAccountForPayment(options))), first());\n  }\n\n  createPaymentMethod(paymentMethodData) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createPaymentMethod(paymentMethodData))), first());\n  }\n\n  retrievePaymentIntent(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrievePaymentIntent(clientSecret))), first());\n  }\n\n  confirmSetup(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSetup(options))), first());\n  }\n\n  confirmAcssDebitSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAcssDebitSetup(clientSecret, data, options))), first());\n  }\n\n  confirmUsBankAccountSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmUsBankAccountSetup(clientSecret, data))), first());\n  }\n\n  confirmAuBecsDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAuBecsDebitSetup(clientSecret, data))), first());\n  }\n\n  confirmBacsDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBacsDebitSetup(clientSecret, data))), first());\n  }\n\n  confirmBancontactSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBancontactSetup(clientSecret, data))), first());\n  }\n\n  confirmCardSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCardSetup(clientSecret, data, options))), first());\n  }\n\n  confirmIdealSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmIdealSetup(clientSecret, data))), first());\n  }\n\n  confirmPayPalSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayPalSetup(clientSecret, data))), first());\n  }\n\n  confirmSepaDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSepaDebitSetup(clientSecret, data))), first());\n  }\n\n  confirmSofortSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSofortSetup(clientSecret, data, options))), first());\n  }\n\n  confirmAffirmPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAffirmPayment(clientSecret, data, options))), first());\n  }\n\n  confirmAfterpayClearpayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))), first());\n  }\n\n  verifyMicrodepositsForSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyMicrodepositsForSetup(clientSecret, data))), first());\n  }\n\n  collectBankAccountForSetup(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.collectBankAccountForSetup(options))), first());\n  }\n\n  retrieveSetupIntent(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveSetupIntent(clientSecret))), first());\n  }\n\n  paymentRequest(options) {\n    const stripe = this.getInstance();\n    return stripe ? stripe.paymentRequest(options) : undefined;\n  }\n\n  createToken(tokenType, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createToken(tokenType, data))), first());\n  }\n\n  createSource(a, b) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createSource(a, b))), first());\n  }\n\n  retrieveSource(source) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveSource(source))), first());\n  }\n\n  verifyIdentity(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyIdentity(clientSecret))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardPayment(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardPayment(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmPaymentIntent(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPaymentIntent(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardSetup(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardSetup(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmSetupIntent(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSetupIntent(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleFpxPayment(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleFpxPayment(clientSecret, element, data))), first());\n  }\n\n  getNgxStripeAppInfo(version) {\n    return {\n      name: 'ngx-stripe',\n      url: 'https://ngx-stripe.dev',\n      partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n      version\n    };\n  }\n\n}\n\nclass WindowRef {\n  constructor(platformId) {\n    this.platformId = platformId;\n  }\n\n  getNativeWindow() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n\n    return {};\n  }\n\n}\n\nWindowRef.ɵfac = function WindowRef_Factory(t) {\n  return new (t || WindowRef)(i0.ɵɵinject(PLATFORM_ID));\n};\n\nWindowRef.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: WindowRef,\n  factory: WindowRef.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowRef, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass DocumentRef {\n  constructor(platformId) {\n    this.platformId = platformId;\n  }\n\n  getNativeDocument() {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n\n    return {};\n  }\n\n}\n\nDocumentRef.ɵfac = function DocumentRef_Factory(t) {\n  return new (t || DocumentRef)(i0.ɵɵinject(PLATFORM_ID));\n};\n\nDocumentRef.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DocumentRef,\n  factory: DocumentRef.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DocumentRef, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass LazyStripeAPILoader {\n  constructor(platformId, window, document) {\n    this.platformId = platformId;\n    this.window = window;\n    this.document = document;\n    this.status = new BehaviorSubject({\n      error: false,\n      loaded: false,\n      loading: false\n    });\n  }\n\n  asStream() {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  isReady() {\n    return this.status.getValue().loaded;\n  }\n\n  load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    const status = this.status.getValue();\n\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({ ...status,\n        loading: true\n      });\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n\n}\n\nLazyStripeAPILoader.ɵfac = function LazyStripeAPILoader_Factory(t) {\n  return new (t || LazyStripeAPILoader)(i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(WindowRef), i0.ɵɵinject(DocumentRef));\n};\n\nLazyStripeAPILoader.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LazyStripeAPILoader,\n  factory: LazyStripeAPILoader.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyStripeAPILoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: WindowRef\n    }, {\n      type: DocumentRef\n    }];\n  }, null);\n})();\n\nclass StripeService {\n  constructor(version, key, options, loader, window) {\n    this.version = version;\n    this.key = key;\n    this.options = options;\n    this.loader = loader;\n    this.window = window;\n\n    if (key) {\n      this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    }\n  }\n\n  getStripeReference() {\n    return this.loader.asStream().pipe(filter(status => status.loaded === true), map(() => this.window.getNativeWindow().Stripe));\n  }\n\n  getInstance() {\n    return this.stripe.getInstance();\n  }\n\n  setKey(key, options) {\n    return this.changeKey(key, options);\n  }\n\n  changeKey(key, options) {\n    this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    return this.stripe;\n  }\n\n  elements(options) {\n    return this.stripe.elements(options);\n  }\n\n  redirectToCheckout(options) {\n    return this.stripe.redirectToCheckout(options);\n  }\n\n  confirmPayment(options) {\n    return this.stripe.confirmPayment(options);\n  }\n\n  confirmAcssDebitPayment(clientSecret, data, options) {\n    return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n  }\n\n  confirmUsBankAccountPayment(clientSecret, data) {\n    return this.stripe.confirmUsBankAccountPayment(clientSecret, data);\n  }\n\n  confirmAlipayPayment(clientSecret, data, options) {\n    return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n  }\n\n  confirmAuBecsDebitPayment(clientSecret, data) {\n    return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n  }\n\n  confirmBancontactPayment(clientSecret, data, options) {\n    return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n  }\n\n  confirmBoletoPayment(clientSecret, data, options) {\n    return this.stripe.confirmBoletoPayment(clientSecret, data, options);\n  }\n\n  confirmCardPayment(clientSecret, data, options) {\n    return this.stripe.confirmCardPayment(clientSecret, data, options);\n  }\n\n  confirmCustomerBalancePayment(clientSecret, data, options) {\n    return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);\n  }\n\n  confirmEpsPayment(clientSecret, data, options) {\n    return this.stripe.confirmEpsPayment(clientSecret, data, options);\n  }\n\n  confirmFpxPayment(clientSecret, data, options) {\n    return this.stripe.confirmFpxPayment(clientSecret, data, options);\n  }\n\n  confirmGiropayPayment(clientSecret, data, options) {\n    return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n  }\n\n  confirmGrabPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n  }\n\n  confirmIdealPayment(clientSecret, data, options) {\n    return this.stripe.confirmIdealPayment(clientSecret, data, options);\n  }\n\n  confirmKlarnaPayment(clientSecret, data, options) {\n    return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n  }\n\n  confirmKonbiniPayment(clientSecret, data, options) {\n    return this.stripe.confirmKonbiniPayment(clientSecret, data, options);\n  }\n\n  confirmOxxoPayment(clientSecret, data, options) {\n    return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n  }\n\n  confirmP24Payment(clientSecret, data, options) {\n    return this.stripe.confirmP24Payment(clientSecret, data, options);\n  }\n\n  confirmPayNowPayment(clientSecret, data, options) {\n    return this.stripe.confirmPayNowPayment(clientSecret, data, options);\n  }\n\n  confirmPayPalPayment(clientSecret, data) {\n    return this.stripe.confirmPayPalPayment(clientSecret, data);\n  }\n\n  confirmPromptPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmPromptPayPayment(clientSecret, data, options);\n  }\n\n  confirmSepaDebitPayment(clientSecret, data) {\n    return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n  }\n\n  confirmSofortPayment(clientSecret, data, options) {\n    return this.stripe.confirmSofortPayment(clientSecret, data, options);\n  }\n\n  confirmWechatPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n  }\n\n  handleCardAction(clientSecret) {\n    return this.stripe.handleCardAction(clientSecret);\n  }\n\n  verifyMicrodepositsForPayment(clientSecret, data) {\n    return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n  }\n\n  collectBankAccountForPayment(options) {\n    return this.stripe.collectBankAccountForPayment(options);\n  }\n\n  createPaymentMethod(paymentMethodData) {\n    return this.stripe.createPaymentMethod(paymentMethodData);\n  }\n\n  retrievePaymentIntent(clientSecret) {\n    return this.stripe.retrievePaymentIntent(clientSecret);\n  }\n\n  confirmSetup(options) {\n    return this.stripe.confirmSetup(options);\n  }\n\n  confirmAcssDebitSetup(clientSecret, data, options) {\n    return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n  }\n\n  confirmUsBankAccountSetup(clientSecret, data) {\n    return this.stripe.confirmUsBankAccountSetup(clientSecret, data);\n  }\n\n  confirmAuBecsDebitSetup(clientSecret, data) {\n    return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n  }\n\n  confirmBacsDebitSetup(clientSecret, data) {\n    return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n  }\n\n  confirmBancontactSetup(clientSecret, data) {\n    return this.stripe.confirmBancontactSetup(clientSecret, data);\n  }\n\n  confirmCardSetup(clientSecret, data, options) {\n    return this.stripe.confirmCardSetup(clientSecret, data, options);\n  }\n\n  confirmIdealSetup(clientSecret, data) {\n    return this.stripe.confirmIdealSetup(clientSecret, data);\n  }\n\n  confirmPayPalSetup(clientSecret, data) {\n    return this.stripe.confirmPayPalSetup(clientSecret, data);\n  }\n\n  confirmSepaDebitSetup(clientSecret, data) {\n    return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n  }\n\n  confirmSofortSetup(clientSecret, data, options) {\n    return this.stripe.confirmSofortSetup(clientSecret, data, options);\n  }\n\n  confirmAffirmPayment(clientSecret, data, options) {\n    return this.stripe.confirmAffirmPayment(clientSecret, data, options);\n  }\n\n  confirmAfterpayClearpayPayment(clientSecret, data, options) {\n    return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n  }\n\n  verifyMicrodepositsForSetup(clientSecret, data) {\n    return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n  }\n\n  collectBankAccountForSetup(options) {\n    return this.stripe.collectBankAccountForSetup(options);\n  }\n\n  retrieveSetupIntent(clientSecret) {\n    return this.stripe.retrieveSetupIntent(clientSecret);\n  }\n\n  paymentRequest(options) {\n    return this.stripe.paymentRequest(options);\n  }\n\n  createToken(tokenType, data) {\n    return this.stripe.createToken(tokenType, data);\n  }\n\n  createSource(a, b) {\n    return this.stripe.createSource(a, b);\n  }\n\n  retrieveSource(source) {\n    return this.stripe.retrieveSource(source);\n  }\n\n  verifyIdentity(clientSecret) {\n    return this.stripe.verifyIdentity(clientSecret);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardPayment(clientSecret, element, data) {\n    return this.stripe.handleCardPayment(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmPaymentIntent(clientSecret, element, data) {\n    return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardSetup(clientSecret, element, data) {\n    return this.stripe.handleCardSetup(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmSetupIntent(clientSecret, element, data) {\n    return this.stripe.confirmSetupIntent(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleFpxPayment(clientSecret, element, data) {\n    return this.stripe.handleFpxPayment(clientSecret, element, data);\n  }\n\n}\n\nStripeService.ɵfac = function StripeService_Factory(t) {\n  return new (t || StripeService)(i0.ɵɵinject(NGX_STRIPE_VERSION), i0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), i0.ɵɵinject(STRIPE_OPTIONS), i0.ɵɵinject(LazyStripeAPILoader), i0.ɵɵinject(WindowRef));\n};\n\nStripeService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StripeService,\n  factory: StripeService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_STRIPE_VERSION]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_PUBLISHABLE_KEY]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_OPTIONS]\n      }]\n    }, {\n      type: LazyStripeAPILoader\n    }, {\n      type: WindowRef\n    }];\n  }, null);\n})();\n\nclass StripeElementsService {\n  constructor(stripeService) {\n    this.stripeService = stripeService;\n  }\n\n  elements(stripe, options = {}) {\n    if (stripe) {\n      if (Object.keys(options).length > 0) {\n        return stripe.elements(options);\n      }\n\n      return stripe.elements();\n    } else {\n      if (Object.keys(options).length > 0) {\n        return this.stripeService.elements(options);\n      }\n\n      return this.stripeService.elements();\n    }\n  }\n\n  paymentRequest(stripe, options) {\n    return stripe ? stripe.paymentRequest(options) : this.stripeService.paymentRequest(options);\n  }\n\n  mergeOptions(options, containerClass) {\n    if (!containerClass || options && options.classes) {\n      return options || {};\n    }\n\n    if (!options || !options.classes) {\n      return { ...(options || {}),\n        classes: {\n          base: containerClass,\n          complete: `${containerClass}--complete`,\n          empty: `${containerClass}--empty`,\n          focus: `${containerClass}--focus`,\n          invalid: `${containerClass}--invalid`,\n          webkitAutoFill: `${containerClass}--webkit-autoFill`\n        }\n      };\n    }\n\n    return options || {};\n  }\n\n}\n\nStripeElementsService.ɵfac = function StripeElementsService_Factory(t) {\n  return new (t || StripeElementsService)(i0.ɵɵinject(StripeService));\n};\n\nStripeElementsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StripeElementsService,\n  factory: StripeElementsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeElementsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: StripeService\n    }];\n  }, null);\n})();\n\nclass StripeCardComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.state = 'starting';\n\n      const options = _this.stripeElementsService.mergeOptions(_this.options, _this.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this.elements) {\n        _this.elements = yield _this.stripeElementsService.elements(_this.stripe, _this.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this.element || updateElements) {\n        if (_this.element && !updateElements) {\n          _this.update(options);\n        } else if (_this.elements && updateElements) {\n          _this.createElement(options);\n        }\n      }\n\n      _this.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.state === 'notready') {\n        _this2.state = 'starting';\n        _this2.elements = yield _this2.stripeElementsService.elements(_this2.stripe).toPromise();\n\n        _this2.createElement();\n\n        _this2.state = 'ready';\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCard() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('card', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeCardComponent.ɵfac = function StripeCardComponent_Factory(t) {\n  return new (t || StripeCardComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardComponent,\n  selectors: [[\"ngx-stripe-card\"]],\n  contentQueries: function StripeCardComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardGroupDirective {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.elements = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.state = 'starting';\n      const elementsOptions = _this3.elementsOptions;\n      const stripe = _this3.stripe;\n\n      if (changes.elementsOptions || changes.stripe || !_this3._elements) {\n        _this3._elements = yield _this3.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n\n        _this3.elements.emit(_this3._elements);\n      }\n\n      _this3.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this4.state === 'notready') {\n        _this4.state = 'starting';\n        _this4._elements = yield _this4.stripeElementsService.elements(_this4.stripe).toPromise();\n\n        _this4.elements.emit(_this4._elements);\n\n        _this4.state = 'ready';\n      }\n    })();\n  }\n\n}\n\nStripeCardGroupDirective.ɵfac = function StripeCardGroupDirective_Factory(t) {\n  return new (t || StripeCardGroupDirective)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeCardGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: StripeCardGroupDirective,\n  selectors: [[\"ngx-stripe-card-group\"], [\"\", \"ngxStripeCardGroup\", \"\"]],\n  inputs: {\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    elements: \"elements\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    elements: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardNumberComponent {\n  constructor(stripeElementsService, cardGroup) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      if (changes.options || changes.containerClass) {\n        _this5.setupElement('options');\n      }\n    })();\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCardNumber() {\n    return this.element;\n  }\n\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardNumber', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n\n}\n\nStripeCardNumberComponent.ɵfac = function StripeCardNumberComponent_Factory(t) {\n  return new (t || StripeCardNumberComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n};\n\nStripeCardNumberComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardNumberComponent,\n  selectors: [[\"ngx-stripe-card-number\"]],\n  contentQueries: function StripeCardNumberComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardNumberComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardNumberComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardNumberComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardNumberComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-number',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }, {\n      type: StripeCardGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardExpiryComponent {\n  constructor(stripeElementsService, cardGroup) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      if (changes.options || changes.containerClass) {\n        _this6.setupElement('options');\n      }\n    })();\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCardExpiry() {\n    return this.element;\n  }\n\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardExpiry', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n\n}\n\nStripeCardExpiryComponent.ɵfac = function StripeCardExpiryComponent_Factory(t) {\n  return new (t || StripeCardExpiryComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n};\n\nStripeCardExpiryComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardExpiryComponent,\n  selectors: [[\"ngx-stripe-card-expiry\"]],\n  contentQueries: function StripeCardExpiryComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardExpiryComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardExpiryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardExpiryComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardExpiryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-expiry',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }, {\n      type: StripeCardGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardCvcComponent {\n  constructor(stripeElementsService, cardGroup) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      if (changes.options || changes.containerClass) {\n        _this7.setupElement('options');\n      }\n    })();\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCardCvc() {\n    return this.element;\n  }\n\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardCvc', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n\n}\n\nStripeCardCvcComponent.ɵfac = function StripeCardCvcComponent_Factory(t) {\n  return new (t || StripeCardCvcComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n};\n\nStripeCardCvcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardCvcComponent,\n  selectors: [[\"ngx-stripe-card-cvc\"]],\n  contentQueries: function StripeCardCvcComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardCvcComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardCvcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardCvcComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardCvcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-cvc',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }, {\n      type: StripeCardGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeFpxBankComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      _this8.state = 'starting';\n\n      const options = _this8.stripeElementsService.mergeOptions(_this8.options, _this8.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this8.elements) {\n        _this8.elements = yield _this8.stripeElementsService.elements(_this8.stripe, _this8.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this8.element || updateElements) {\n        if (_this8.element && !updateElements) {\n          _this8.update(options);\n        } else if (_this8.elements && updateElements) {\n          _this8.createElement(options);\n        }\n      }\n\n      _this8.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this9.state === 'notready') {\n        _this9.state = 'starting';\n        _this9.elements = yield _this9.stripeElementsService.elements(_this9.stripe).toPromise();\n\n        _this9.createElement();\n\n        _this9.state = 'ready';\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getFpxBank() {\n    return this.element;\n  }\n\n  createElement(options = {\n    accountHolderType: 'individual'\n  }) {\n    this.element = this.elements.create('fpxBank', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeFpxBankComponent.ɵfac = function StripeFpxBankComponent_Factory(t) {\n  return new (t || StripeFpxBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeFpxBankComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeFpxBankComponent,\n  selectors: [[\"ngx-stripe-fpx-bank\"]],\n  contentQueries: function StripeFpxBankComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeFpxBankComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeFpxBankComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeFpxBankComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeFpxBankComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-fpx-bank',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeIdealBankComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      _this10.state = 'starting';\n\n      const options = _this10.stripeElementsService.mergeOptions(_this10.options, _this10.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this10.elements) {\n        _this10.elements = yield _this10.stripeElementsService.elements(_this10.stripe, _this10.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this10.element || updateElements) {\n        if (_this10.element && !updateElements) {\n          _this10.update(options);\n        } else if (_this10.elements && updateElements) {\n          _this10.createElement(options);\n        }\n      }\n\n      _this10.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this11.state === 'notready') {\n        _this11.state = 'starting';\n        _this11.elements = yield _this11.stripeElementsService.elements(_this11.stripe).toPromise();\n\n        _this11.createElement();\n\n        _this11.state = 'ready';\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getIdealBank() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('idealBank', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeIdealBankComponent.ɵfac = function StripeIdealBankComponent_Factory(t) {\n  return new (t || StripeIdealBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeIdealBankComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeIdealBankComponent,\n  selectors: [[\"ngx-stripe-ideal-bank\"]],\n  contentQueries: function StripeIdealBankComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeIdealBankComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeIdealBankComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeIdealBankComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIdealBankComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-ideal-bank',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeIbanComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      _this12.state = 'starting';\n\n      const options = _this12.stripeElementsService.mergeOptions(_this12.options, _this12.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this12.elements) {\n        _this12.elements = yield _this12.stripeElementsService.elements(_this12.stripe, _this12.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this12.element || updateElements) {\n        if (_this12.element && !updateElements) {\n          _this12.update(options);\n        } else if (_this12.elements && updateElements) {\n          _this12.createElement(options);\n        }\n      }\n\n      _this12.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this13.state === 'notready') {\n        _this13.state = 'starting';\n        _this13.elements = yield _this13.stripeElementsService.elements(_this13.stripe).toPromise();\n\n        _this13.createElement();\n\n        _this13.state = 'ready';\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getIban() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('iban', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeIbanComponent.ɵfac = function StripeIbanComponent_Factory(t) {\n  return new (t || StripeIbanComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeIbanComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeIbanComponent,\n  selectors: [[\"ngx-stripe-iban\"]],\n  contentQueries: function StripeIbanComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeIbanComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeIbanComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeIbanComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIbanComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-iban',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeAuBankAccountComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      _this14.state = 'starting';\n\n      const options = _this14.stripeElementsService.mergeOptions(_this14.options, _this14.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this14.elements) {\n        _this14.elements = yield _this14.stripeElementsService.elements(_this14.stripe, _this14.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this14.element || updateElements) {\n        if (_this14.element && !updateElements) {\n          _this14.update(options);\n        } else if (_this14.elements && updateElements) {\n          _this14.createElement(options);\n        }\n      }\n\n      _this14.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this15.state === 'notready') {\n        _this15.state = 'starting';\n        _this15.elements = yield _this15.stripeElementsService.elements(_this15.stripe).toPromise();\n\n        _this15.createElement();\n\n        _this15.state = 'ready';\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getAuBankAccount() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('auBankAccount', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeAuBankAccountComponent.ɵfac = function StripeAuBankAccountComponent_Factory(t) {\n  return new (t || StripeAuBankAccountComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeAuBankAccountComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeAuBankAccountComponent,\n  selectors: [[\"ngx-stripe-au-bank-account\"]],\n  contentQueries: function StripeAuBankAccountComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeAuBankAccountComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeAuBankAccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeAuBankAccountComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeAuBankAccountComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-au-bank-account',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripePaymentElementComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.doNotCreateUntilClientSecretIsSet = false;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.loaderror = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this16 = this;\n\n    return _asyncToGenerator(function* () {\n      _this16.state = 'starting';\n\n      const options = _this16.stripeElementsService.mergeOptions(_this16.options, _this16.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || changes.clientSecret || changes.appearance || !_this16.elements) {\n        _this16.elements = yield _this16.stripeElementsService.elements(_this16.stripe, { ...(_this16.elementsOptions || {}),\n          ...(_this16.appearance ? {\n            appearance: _this16.appearance\n          } : {}),\n          ...(_this16.clientSecret ? {\n            clientSecret: _this16.clientSecret\n          } : {})\n        }).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this16.element || updateElements) {\n        if (_this16.element && !updateElements) {\n          _this16.update(options);\n        } else if (_this16.elements && updateElements) {\n          _this16.createElement(options);\n        }\n      }\n\n      _this16.state = 'ready';\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    return this.element.update(options);\n  }\n\n  collapse() {\n    return this.element.collapse();\n  }\n\n  fetchUpdates() {\n    return from(this.elements.fetchUpdates());\n  }\n\n  createElement(options = {}) {\n    try {\n      this.element = this.elements.create('payment', options);\n    } catch (err) {\n      this.elements = null;\n      throw err;\n    }\n\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', ev => this.blur.emit(ev));\n    this.element.on('focus', ev => this.focus.emit(ev));\n    this.element.on('ready', ev => this.ready.emit(ev));\n    this.element.on('escape', ev => this.escape.emit(ev));\n    this.element.on('loaderror', ev => this.loaderror.emit(ev));\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripePaymentElementComponent.ɵfac = function StripePaymentElementComponent_Factory(t) {\n  return new (t || StripePaymentElementComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripePaymentElementComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripePaymentElementComponent,\n  selectors: [[\"ngx-stripe-payment\"]],\n  viewQuery: function StripePaymentElementComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\",\n    appearance: \"appearance\",\n    clientSecret: \"clientSecret\",\n    doNotCreateUntilClientSecretIsSet: \"doNotCreateUntilClientSecretIsSet\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\",\n    loaderror: \"loaderror\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]],\n  template: function StripePaymentElementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripePaymentElementComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-payment',\n      template: `<div class=\"field\" #stripeElementRef></div>`\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    clientSecret: [{\n      type: Input\n    }],\n    doNotCreateUntilClientSecretIsSet: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }],\n    loaderror: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripePaymentRequestButtonComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.change = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.token = new EventEmitter();\n    this.paymentMethod = new EventEmitter();\n    this.source = new EventEmitter();\n    this.cancel = new EventEmitter();\n    this.shippingaddresschange = new EventEmitter();\n    this.shippingoptionchange = new EventEmitter();\n    this.notavailable = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    var _this17 = this;\n\n    return _asyncToGenerator(function* () {\n      const options = _this17.stripeElementsService.mergeOptions(_this17.options, _this17.containerClass);\n\n      const elementsOptions = _this17.elementsOptions;\n      const stripe = _this17.stripe;\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this17.elements) {\n        const elements = yield _this17.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n        _this17.elements = elements;\n        updateElements = true;\n      }\n\n      if (changes.paymentOptions && _this17.paymentRequest) {\n        _this17.updateRequest(_this17.paymentOptions);\n      }\n\n      if (changes.options || changes.containerClass || !_this17.element || updateElements) {\n        if (_this17.element && !updateElements) {\n          _this17.update(options);\n        } else if (_this17.elements && updateElements) {\n          _this17.paymentRequest = _this17.stripeElementsService.paymentRequest(stripe, _this17.paymentOptions);\n\n          _this17.paymentRequest.on('token', ev => _this17.token.emit(ev));\n\n          if (_this17.paymentMethod.observed) _this17.paymentRequest.on('paymentmethod', ev => _this17.paymentMethod.emit(ev));\n          if (_this17.source.observed && !_this17.paymentMethod.observed) _this17.paymentRequest.on('source', ev => _this17.source.emit(ev));\n\n          _this17.paymentRequest.on('cancel', () => _this17.cancel.emit());\n\n          _this17.paymentRequest.on('shippingaddresschange', ev => _this17.shippingaddresschange.emit(ev));\n\n          _this17.paymentRequest.on('shippingoptionchange', ev => _this17.shippingoptionchange.emit(ev));\n\n          _this17.element = _this17.elements.create('paymentRequestButton', {\n            paymentRequest: _this17.paymentRequest,\n            ...options\n          });\n\n          _this17.canMakePayment().subscribe(result => {\n            if (result) {\n              _this17.element.on('click', ev => _this17.change.emit(ev));\n\n              _this17.element.on('blur', () => _this17.blur.emit());\n\n              _this17.element.on('focus', () => _this17.focus.emit());\n\n              _this17.element.on('ready', () => _this17.ready.emit());\n\n              _this17.element.mount(_this17.stripeElementRef.nativeElement);\n\n              _this17.load.emit({\n                paymentRequestButton: _this17.element,\n                paymentRequest: _this17.paymentRequest\n              });\n            } else {\n              _this17.notavailable.emit();\n            }\n          });\n        }\n      }\n    })();\n  }\n\n  canMakePayment() {\n    return from(this.paymentRequest.canMakePayment());\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n\n  updateRequest(options) {\n    const {\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    } = options;\n    this.paymentRequest.update({\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    });\n  }\n\n  show() {\n    this.paymentRequest.show();\n  }\n\n  abort() {\n    this.paymentRequest.abort();\n  }\n\n  isShowing() {\n    return this.paymentRequest.isShowing();\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getButton() {\n    return this.element;\n  }\n\n}\n\nStripePaymentRequestButtonComponent.ɵfac = function StripePaymentRequestButtonComponent_Factory(t) {\n  return new (t || StripePaymentRequestButtonComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripePaymentRequestButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripePaymentRequestButtonComponent,\n  selectors: [[\"ngx-stripe-payment-request-button\"]],\n  viewQuery: function StripePaymentRequestButtonComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    paymentOptions: \"paymentOptions\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    change: \"change\",\n    blur: \"blur\",\n    focus: \"focus\",\n    ready: \"ready\",\n    token: \"token\",\n    paymentMethod: \"paymentMethod\",\n    source: \"source\",\n    cancel: \"cancel\",\n    shippingaddresschange: \"shippingaddresschange\",\n    shippingoptionchange: \"shippingoptionchange\",\n    notavailable: \"notavailable\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]],\n  template: function StripePaymentRequestButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripePaymentRequestButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-payment-request-button',\n      template: `<div class=\"field\" #stripeElementRef></div>`\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    paymentOptions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    token: [{\n      type: Output\n    }],\n    paymentMethod: [{\n      type: Output\n    }],\n    source: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n    shippingaddresschange: [{\n      type: Output\n    }],\n    shippingoptionchange: [{\n      type: Output\n    }],\n    notavailable: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeFactoryService {\n  constructor(version, baseKey, baseOptions, loader, window) {\n    this.version = version;\n    this.baseKey = baseKey;\n    this.baseOptions = baseOptions;\n    this.loader = loader;\n    this.window = window;\n  }\n\n  create(key, options) {\n    if (!key && !this.baseKey) {\n      return null;\n    }\n\n    return new StripeInstance(this.version, this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n  }\n\n}\n\nStripeFactoryService.ɵfac = function StripeFactoryService_Factory(t) {\n  return new (t || StripeFactoryService)(i0.ɵɵinject(NGX_STRIPE_VERSION), i0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), i0.ɵɵinject(STRIPE_OPTIONS), i0.ɵɵinject(LazyStripeAPILoader), i0.ɵɵinject(WindowRef));\n};\n\nStripeFactoryService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StripeFactoryService,\n  factory: StripeFactoryService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeFactoryService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_STRIPE_VERSION]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_PUBLISHABLE_KEY]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_OPTIONS]\n      }]\n    }, {\n      type: LazyStripeAPILoader\n    }, {\n      type: WindowRef\n    }];\n  }, null);\n})();\n\nconst components = [StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeFpxBankComponent, StripeIdealBankComponent, StripeIbanComponent, StripeAuBankAccountComponent, StripePaymentElementComponent, StripePaymentRequestButtonComponent];\nconst directives = [StripeCardGroupDirective, NgxStripeElementLoadingTemplateDirective];\nconst currentVersion = '14.1.0';\n\nclass NgxStripeModule {\n  static forRoot(publishableKey, options) {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [LazyStripeAPILoader, StripeService, StripeFactoryService, StripeElementsService, WindowRef, DocumentRef, {\n        provide: STRIPE_PUBLISHABLE_KEY,\n        useValue: publishableKey\n      }, {\n        provide: STRIPE_OPTIONS,\n        useValue: options\n      }, {\n        provide: NGX_STRIPE_VERSION,\n        useValue: currentVersion\n      }]\n    };\n  }\n\n  static forChild(publishableKey, options) {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [LazyStripeAPILoader, StripeService, StripeFactoryService, StripeElementsService, WindowRef, DocumentRef, {\n        provide: STRIPE_PUBLISHABLE_KEY,\n        useValue: publishableKey\n      }, {\n        provide: STRIPE_OPTIONS,\n        useValue: options\n      }, {\n        provide: NGX_STRIPE_VERSION,\n        useValue: currentVersion\n      }]\n    };\n  }\n\n}\n\nNgxStripeModule.ɵfac = function NgxStripeModule_Factory(t) {\n  return new (t || NgxStripeModule)();\n};\n\nNgxStripeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxStripeModule\n});\nNgxStripeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxStripeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [...components, ...directives],\n      exports: [...components, ...directives],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-stripe\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DocumentRef, LazyStripeAPILoader, NgxStripeElementLoadingTemplateDirective, NgxStripeModule, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY, StripeAuBankAccountComponent, StripeCardComponent, StripeCardCvcComponent, StripeCardExpiryComponent, StripeCardGroupDirective, StripeCardNumberComponent, StripeElementsService, StripeFactoryService, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeInstance, StripePaymentElementComponent, StripePaymentRequestButtonComponent, StripeService, WindowRef };","map":{"version":3,"names":["i2","isPlatformBrowser","isPlatformServer","CommonModule","i0","Directive","InjectionToken","PLATFORM_ID","Injectable","Inject","EventEmitter","TemplateRef","Component","ContentChild","ViewChild","Input","Output","Optional","NgModule","filter","first","map","switchMap","BehaviorSubject","from","NgxStripeElementLoadingTemplateDirective","constructor","templateRef","ɵfac","ɵdir","type","args","selector","STRIPE_PUBLISHABLE_KEY","STRIPE_OPTIONS","NGX_STRIPE_VERSION","StripeInstance","version","loader","window","key","options","stripe$","undefined","stripe","asObservable","pipe","Boolean","asStream","status","loaded","getNativeWindow","Stripe","subscribe","stripeInstance","registerAppInfo","getNgxStripeAppInfo","next","getInstance","getValue","elements","redirectToCheckout","confirmPayment","confirmAcssDebitPayment","clientSecret","data","confirmUsBankAccountPayment","confirmAlipayPayment","confirmAuBecsDebitPayment","confirmBancontactPayment","confirmBoletoPayment","confirmCardPayment","confirmCustomerBalancePayment","confirmEpsPayment","confirmFpxPayment","confirmGiropayPayment","confirmGrabPayPayment","confirmIdealPayment","confirmKlarnaPayment","confirmKonbiniPayment","confirmOxxoPayment","confirmP24Payment","confirmPayNowPayment","confirmPayPalPayment","confirmPromptPayPayment","confirmSepaDebitPayment","confirmSofortPayment","confirmWechatPayPayment","handleCardAction","verifyMicrodepositsForPayment","collectBankAccountForPayment","createPaymentMethod","paymentMethodData","retrievePaymentIntent","confirmSetup","confirmAcssDebitSetup","confirmUsBankAccountSetup","confirmAuBecsDebitSetup","confirmBacsDebitSetup","confirmBancontactSetup","confirmCardSetup","confirmIdealSetup","confirmPayPalSetup","confirmSepaDebitSetup","confirmSofortSetup","confirmAffirmPayment","confirmAfterpayClearpayPayment","verifyMicrodepositsForSetup","collectBankAccountForSetup","retrieveSetupIntent","paymentRequest","createToken","tokenType","createSource","a","b","retrieveSource","source","verifyIdentity","handleCardPayment","element","confirmPaymentIntent","handleCardSetup","confirmSetupIntent","handleFpxPayment","name","url","partner_id","WindowRef","platformId","ɵprov","decorators","DocumentRef","getNativeDocument","document","LazyStripeAPILoader","error","loading","load","isReady","hasOwnProperty","script","createElement","async","defer","src","onload","onerror","body","appendChild","StripeService","getStripeReference","setKey","changeKey","StripeElementsService","stripeService","Object","keys","length","mergeOptions","containerClass","classes","base","complete","empty","focus","invalid","webkitAutoFill","StripeCardComponent","stripeElementsService","blur","change","ready","escape","state","ngOnChanges","changes","updateElements","elementsOptions","toPromise","update","ngOnInit","ngOnDestroy","destroy","getCard","create","on","ev","emit","mount","stripeElementRef","nativeElement","ɵcmp","NgIf","NgTemplateOutlet","template","loadingTemplate","read","StripeCardGroupDirective","_elements","StripeCardNumberComponent","cardGroup","setupElement","cardGroupSubscription","Error","unsubscribe","getCardNumber","StripeCardExpiryComponent","getCardExpiry","StripeCardCvcComponent","getCardCvc","StripeFpxBankComponent","getFpxBank","accountHolderType","StripeIdealBankComponent","getIdealBank","StripeIbanComponent","getIban","StripeAuBankAccountComponent","getAuBankAccount","StripePaymentElementComponent","doNotCreateUntilClientSecretIsSet","loaderror","appearance","collapse","fetchUpdates","err","StripePaymentRequestButtonComponent","token","paymentMethod","cancel","shippingaddresschange","shippingoptionchange","notavailable","paymentOptions","updateRequest","observed","canMakePayment","result","paymentRequestButton","currency","total","displayItems","shippingOptions","show","abort","isShowing","getButton","StripeFactoryService","baseKey","baseOptions","components","directives","currentVersion","NgxStripeModule","forRoot","publishableKey","ngModule","providers","provide","useValue","forChild","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/home/odraude/proyectos/cafe-las-flores/node_modules/ngx-stripe/fesm2020/ngx-stripe.mjs"],"sourcesContent":["import * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, PLATFORM_ID, Injectable, Inject, EventEmitter, TemplateRef, Component, ContentChild, ViewChild, Input, Output, Optional, NgModule } from '@angular/core';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject, from } from 'rxjs';\n\nclass NgxStripeElementLoadingTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgxStripeElementLoadingTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: NgxStripeElementLoadingTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgxStripeElementLoadingTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.3\", type: NgxStripeElementLoadingTemplateDirective, selector: \"[ngxStripeLoadingTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: NgxStripeElementLoadingTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxStripeLoadingTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nconst STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');\nconst STRIPE_OPTIONS = new InjectionToken('Stripe Options');\nconst NGX_STRIPE_VERSION = new InjectionToken('NGX_STRIPE_VERSION');\n\nclass StripeInstance {\n    constructor(version, loader, window, key, options) {\n        this.version = version;\n        this.loader = loader;\n        this.window = window;\n        this.key = key;\n        this.options = options;\n        this.stripe$ = new BehaviorSubject(undefined);\n        this.stripe = this.stripe$.asObservable().pipe(filter((stripe) => Boolean(stripe)));\n        this.loader\n            .asStream()\n            .pipe(filter((status) => status.loaded === true), first(), map(() => this.window.getNativeWindow().Stripe))\n            .subscribe((stripeInstance) => {\n            const stripe = this.options\n                ? stripeInstance(this.key, this.options)\n                : stripeInstance(this.key);\n            stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n            this.stripe$.next(stripe);\n        });\n    }\n    getInstance() {\n        return this.stripe$.getValue();\n    }\n    elements(options) {\n        return this.stripe$.asObservable().pipe(filter((stripe) => Boolean(stripe)), map((stripe) => stripe.elements(options)), first());\n    }\n    redirectToCheckout(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.redirectToCheckout(options))), first());\n    }\n    confirmPayment(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayment(options))), first());\n    }\n    confirmAcssDebitPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAcssDebitPayment(clientSecret, data, options))), first());\n    }\n    confirmUsBankAccountPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmUsBankAccountPayment(clientSecret, data))), first());\n    }\n    confirmAlipayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAlipayPayment(clientSecret, data, options))), first());\n    }\n    confirmAuBecsDebitPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAuBecsDebitPayment(clientSecret, data))), first());\n    }\n    confirmBancontactPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBancontactPayment(clientSecret, data, options))), first());\n    }\n    confirmBoletoPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBoletoPayment(clientSecret, data, options))), first());\n    }\n    confirmCardPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCardPayment(clientSecret, data, options))), first());\n    }\n    confirmCustomerBalancePayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCustomerBalancePayment(clientSecret, data, options))), first());\n    }\n    confirmEpsPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmEpsPayment(clientSecret, data, options))), first());\n    }\n    confirmFpxPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmFpxPayment(clientSecret, data, options))), first());\n    }\n    confirmGiropayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmGiropayPayment(clientSecret, data, options))), first());\n    }\n    confirmGrabPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmGrabPayPayment(clientSecret, data, options))), first());\n    }\n    confirmIdealPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmIdealPayment(clientSecret, data, options))), first());\n    }\n    confirmKlarnaPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmKlarnaPayment(clientSecret, data, options))), first());\n    }\n    confirmKonbiniPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmKonbiniPayment(clientSecret, data, options))), first());\n    }\n    confirmOxxoPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmOxxoPayment(clientSecret, data, options))), first());\n    }\n    confirmP24Payment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmP24Payment(clientSecret, data, options))), first());\n    }\n    confirmPayNowPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayNowPayment(clientSecret, data, options))), first());\n    }\n    confirmPayPalPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayPalPayment(clientSecret, data))), first());\n    }\n    confirmPromptPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPromptPayPayment(clientSecret, data, options))), first());\n    }\n    confirmSepaDebitPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSepaDebitPayment(clientSecret, data))), first());\n    }\n    confirmSofortPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSofortPayment(clientSecret, data, options))), first());\n    }\n    confirmWechatPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmWechatPayPayment(clientSecret, data, options))), first());\n    }\n    handleCardAction(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardAction(clientSecret))), first());\n    }\n    verifyMicrodepositsForPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyMicrodepositsForPayment(clientSecret, data))), first());\n    }\n    collectBankAccountForPayment(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.collectBankAccountForPayment(options))), first());\n    }\n    createPaymentMethod(paymentMethodData) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createPaymentMethod(paymentMethodData))), first());\n    }\n    retrievePaymentIntent(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrievePaymentIntent(clientSecret))), first());\n    }\n    confirmSetup(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSetup(options))), first());\n    }\n    confirmAcssDebitSetup(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAcssDebitSetup(clientSecret, data, options))), first());\n    }\n    confirmUsBankAccountSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmUsBankAccountSetup(clientSecret, data))), first());\n    }\n    confirmAuBecsDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAuBecsDebitSetup(clientSecret, data))), first());\n    }\n    confirmBacsDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBacsDebitSetup(clientSecret, data))), first());\n    }\n    confirmBancontactSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBancontactSetup(clientSecret, data))), first());\n    }\n    confirmCardSetup(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCardSetup(clientSecret, data, options))), first());\n    }\n    confirmIdealSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmIdealSetup(clientSecret, data))), first());\n    }\n    confirmPayPalSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayPalSetup(clientSecret, data))), first());\n    }\n    confirmSepaDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSepaDebitSetup(clientSecret, data))), first());\n    }\n    confirmSofortSetup(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSofortSetup(clientSecret, data, options))), first());\n    }\n    confirmAffirmPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAffirmPayment(clientSecret, data, options))), first());\n    }\n    confirmAfterpayClearpayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))), first());\n    }\n    verifyMicrodepositsForSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyMicrodepositsForSetup(clientSecret, data))), first());\n    }\n    collectBankAccountForSetup(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.collectBankAccountForSetup(options))), first());\n    }\n    retrieveSetupIntent(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrieveSetupIntent(clientSecret))), first());\n    }\n    paymentRequest(options) {\n        const stripe = this.getInstance();\n        return stripe ? stripe.paymentRequest(options) : undefined;\n    }\n    createToken(tokenType, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createToken(tokenType, data))), first());\n    }\n    createSource(a, b) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createSource(a, b))), first());\n    }\n    retrieveSource(source) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrieveSource(source))), first());\n    }\n    verifyIdentity(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyIdentity(clientSecret))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleCardPayment(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardPayment(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPaymentIntent(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleCardSetup(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardSetup(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSetupIntent(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleFpxPayment(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleFpxPayment(clientSecret, element, data))), first());\n    }\n    getNgxStripeAppInfo(version) {\n        return {\n            name: 'ngx-stripe',\n            url: 'https://ngx-stripe.dev',\n            partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n            version\n        };\n    }\n}\n\nclass WindowRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    getNativeWindow() {\n        if (isPlatformBrowser(this.platformId)) {\n            return window;\n        }\n        return {};\n    }\n}\nWindowRef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: WindowRef, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nWindowRef.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: WindowRef });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: WindowRef, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\nclass DocumentRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    getNativeDocument() {\n        if (isPlatformBrowser(this.platformId)) {\n            return document;\n        }\n        return {};\n    }\n}\nDocumentRef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: DocumentRef, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nDocumentRef.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: DocumentRef });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: DocumentRef, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\nclass LazyStripeAPILoader {\n    constructor(platformId, window, document) {\n        this.platformId = platformId;\n        this.window = window;\n        this.document = document;\n        this.status = new BehaviorSubject({\n            error: false,\n            loaded: false,\n            loading: false\n        });\n    }\n    asStream() {\n        this.load();\n        return this.status.asObservable();\n    }\n    isReady() {\n        return this.status.getValue().loaded;\n    }\n    load() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        const status = this.status.getValue();\n        if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n            this.status.next({\n                error: false,\n                loaded: true,\n                loading: false\n            });\n        }\n        else if (!status.loaded && !status.loading) {\n            this.status.next({\n                ...status,\n                loading: true\n            });\n            const script = this.document.getNativeDocument().createElement('script');\n            script.type = 'text/javascript';\n            script.async = true;\n            script.defer = true;\n            script.src = 'https://js.stripe.com/v3/';\n            script.onload = () => {\n                this.status.next({\n                    error: false,\n                    loaded: true,\n                    loading: false\n                });\n            };\n            script.onerror = () => {\n                this.status.next({\n                    error: true,\n                    loaded: false,\n                    loading: false\n                });\n            };\n            this.document.getNativeDocument().body.appendChild(script);\n        }\n    }\n}\nLazyStripeAPILoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: LazyStripeAPILoader, deps: [{ token: PLATFORM_ID }, { token: WindowRef }, { token: DocumentRef }], target: i0.ɵɵFactoryTarget.Injectable });\nLazyStripeAPILoader.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: LazyStripeAPILoader });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: LazyStripeAPILoader, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: WindowRef }, { type: DocumentRef }]; } });\n\nclass StripeService {\n    constructor(version, key, options, loader, window) {\n        this.version = version;\n        this.key = key;\n        this.options = options;\n        this.loader = loader;\n        this.window = window;\n        if (key) {\n            this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n        }\n    }\n    getStripeReference() {\n        return this.loader.asStream().pipe(filter((status) => status.loaded === true), map(() => this.window.getNativeWindow().Stripe));\n    }\n    getInstance() {\n        return this.stripe.getInstance();\n    }\n    setKey(key, options) {\n        return this.changeKey(key, options);\n    }\n    changeKey(key, options) {\n        this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n        return this.stripe;\n    }\n    elements(options) {\n        return this.stripe.elements(options);\n    }\n    redirectToCheckout(options) {\n        return this.stripe.redirectToCheckout(options);\n    }\n    confirmPayment(options) {\n        return this.stripe.confirmPayment(options);\n    }\n    confirmAcssDebitPayment(clientSecret, data, options) {\n        return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n    }\n    confirmUsBankAccountPayment(clientSecret, data) {\n        return this.stripe.confirmUsBankAccountPayment(clientSecret, data);\n    }\n    confirmAlipayPayment(clientSecret, data, options) {\n        return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n    }\n    confirmAuBecsDebitPayment(clientSecret, data) {\n        return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n    }\n    confirmBancontactPayment(clientSecret, data, options) {\n        return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n    }\n    confirmBoletoPayment(clientSecret, data, options) {\n        return this.stripe.confirmBoletoPayment(clientSecret, data, options);\n    }\n    confirmCardPayment(clientSecret, data, options) {\n        return this.stripe.confirmCardPayment(clientSecret, data, options);\n    }\n    confirmCustomerBalancePayment(clientSecret, data, options) {\n        return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);\n    }\n    confirmEpsPayment(clientSecret, data, options) {\n        return this.stripe.confirmEpsPayment(clientSecret, data, options);\n    }\n    confirmFpxPayment(clientSecret, data, options) {\n        return this.stripe.confirmFpxPayment(clientSecret, data, options);\n    }\n    confirmGiropayPayment(clientSecret, data, options) {\n        return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n    }\n    confirmGrabPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n    }\n    confirmIdealPayment(clientSecret, data, options) {\n        return this.stripe.confirmIdealPayment(clientSecret, data, options);\n    }\n    confirmKlarnaPayment(clientSecret, data, options) {\n        return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n    }\n    confirmKonbiniPayment(clientSecret, data, options) {\n        return this.stripe.confirmKonbiniPayment(clientSecret, data, options);\n    }\n    confirmOxxoPayment(clientSecret, data, options) {\n        return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n    }\n    confirmP24Payment(clientSecret, data, options) {\n        return this.stripe.confirmP24Payment(clientSecret, data, options);\n    }\n    confirmPayNowPayment(clientSecret, data, options) {\n        return this.stripe.confirmPayNowPayment(clientSecret, data, options);\n    }\n    confirmPayPalPayment(clientSecret, data) {\n        return this.stripe.confirmPayPalPayment(clientSecret, data);\n    }\n    confirmPromptPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmPromptPayPayment(clientSecret, data, options);\n    }\n    confirmSepaDebitPayment(clientSecret, data) {\n        return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n    }\n    confirmSofortPayment(clientSecret, data, options) {\n        return this.stripe.confirmSofortPayment(clientSecret, data, options);\n    }\n    confirmWechatPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n    }\n    handleCardAction(clientSecret) {\n        return this.stripe.handleCardAction(clientSecret);\n    }\n    verifyMicrodepositsForPayment(clientSecret, data) {\n        return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n    }\n    collectBankAccountForPayment(options) {\n        return this.stripe.collectBankAccountForPayment(options);\n    }\n    createPaymentMethod(paymentMethodData) {\n        return this.stripe.createPaymentMethod(paymentMethodData);\n    }\n    retrievePaymentIntent(clientSecret) {\n        return this.stripe.retrievePaymentIntent(clientSecret);\n    }\n    confirmSetup(options) {\n        return this.stripe.confirmSetup(options);\n    }\n    confirmAcssDebitSetup(clientSecret, data, options) {\n        return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n    }\n    confirmUsBankAccountSetup(clientSecret, data) {\n        return this.stripe.confirmUsBankAccountSetup(clientSecret, data);\n    }\n    confirmAuBecsDebitSetup(clientSecret, data) {\n        return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n    }\n    confirmBacsDebitSetup(clientSecret, data) {\n        return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n    }\n    confirmBancontactSetup(clientSecret, data) {\n        return this.stripe.confirmBancontactSetup(clientSecret, data);\n    }\n    confirmCardSetup(clientSecret, data, options) {\n        return this.stripe.confirmCardSetup(clientSecret, data, options);\n    }\n    confirmIdealSetup(clientSecret, data) {\n        return this.stripe.confirmIdealSetup(clientSecret, data);\n    }\n    confirmPayPalSetup(clientSecret, data) {\n        return this.stripe.confirmPayPalSetup(clientSecret, data);\n    }\n    confirmSepaDebitSetup(clientSecret, data) {\n        return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n    }\n    confirmSofortSetup(clientSecret, data, options) {\n        return this.stripe.confirmSofortSetup(clientSecret, data, options);\n    }\n    confirmAffirmPayment(clientSecret, data, options) {\n        return this.stripe.confirmAffirmPayment(clientSecret, data, options);\n    }\n    confirmAfterpayClearpayPayment(clientSecret, data, options) {\n        return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n    }\n    verifyMicrodepositsForSetup(clientSecret, data) {\n        return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n    }\n    collectBankAccountForSetup(options) {\n        return this.stripe.collectBankAccountForSetup(options);\n    }\n    retrieveSetupIntent(clientSecret) {\n        return this.stripe.retrieveSetupIntent(clientSecret);\n    }\n    paymentRequest(options) {\n        return this.stripe.paymentRequest(options);\n    }\n    createToken(tokenType, data) {\n        return this.stripe.createToken(tokenType, data);\n    }\n    createSource(a, b) {\n        return this.stripe.createSource(a, b);\n    }\n    retrieveSource(source) {\n        return this.stripe.retrieveSource(source);\n    }\n    verifyIdentity(clientSecret) {\n        return this.stripe.verifyIdentity(clientSecret);\n    }\n    /**\n     * @deprecated\n     */\n    handleCardPayment(clientSecret, element, data) {\n        return this.stripe.handleCardPayment(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n        return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    handleCardSetup(clientSecret, element, data) {\n        return this.stripe.handleCardSetup(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n        return this.stripe.confirmSetupIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    handleFpxPayment(clientSecret, element, data) {\n        return this.stripe.handleFpxPayment(clientSecret, element, data);\n    }\n}\nStripeService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeService, deps: [{ token: NGX_STRIPE_VERSION }, { token: STRIPE_PUBLISHABLE_KEY }, { token: STRIPE_OPTIONS }, { token: LazyStripeAPILoader }, { token: WindowRef }], target: i0.ɵɵFactoryTarget.Injectable });\nStripeService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_STRIPE_VERSION]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [STRIPE_PUBLISHABLE_KEY]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [STRIPE_OPTIONS]\n                }] }, { type: LazyStripeAPILoader }, { type: WindowRef }]; } });\n\nclass StripeElementsService {\n    constructor(stripeService) {\n        this.stripeService = stripeService;\n    }\n    elements(stripe, options = {}) {\n        if (stripe) {\n            if (Object.keys(options).length > 0) {\n                return stripe.elements(options);\n            }\n            return stripe.elements();\n        }\n        else {\n            if (Object.keys(options).length > 0) {\n                return this.stripeService.elements(options);\n            }\n            return this.stripeService.elements();\n        }\n    }\n    paymentRequest(stripe, options) {\n        return stripe ? stripe.paymentRequest(options) : this.stripeService.paymentRequest(options);\n    }\n    mergeOptions(options, containerClass) {\n        if (!containerClass || (options && options.classes)) {\n            return options || {};\n        }\n        if (!options || !options.classes) {\n            return {\n                ...(options || {}),\n                classes: {\n                    base: containerClass,\n                    complete: `${containerClass}--complete`,\n                    empty: `${containerClass}--empty`,\n                    focus: `${containerClass}--focus`,\n                    invalid: `${containerClass}--invalid`,\n                    webkitAutoFill: `${containerClass}--webkit-autoFill`\n                }\n            };\n        }\n        return options || {};\n    }\n}\nStripeElementsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeElementsService, deps: [{ token: StripeService }], target: i0.ɵɵFactoryTarget.Injectable });\nStripeElementsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeElementsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeElementsService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: StripeService }]; } });\n\nclass StripeCardComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n            updateElements = true;\n        }\n        if (changes.options || changes.containerClass || !this.element || updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n            this.createElement();\n            this.state = 'ready';\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCard() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('card', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeCardComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripeCardComponent, selector: \"ngx-stripe-card\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeCardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeCardGroupDirective {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.elements = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const elementsOptions = this.elementsOptions;\n        const stripe = this.stripe;\n        if (changes.elementsOptions || changes.stripe || !this._elements) {\n            this._elements = await this.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n            this.elements.emit(this._elements);\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this._elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n            this.elements.emit(this._elements);\n            this.state = 'ready';\n        }\n    }\n}\nStripeCardGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeCardGroupDirective, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Directive });\nStripeCardGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripeCardGroupDirective, selector: \"ngx-stripe-card-group,[ngxStripeCardGroup]\", inputs: { elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { elements: \"elements\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeCardGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], elements: [{\n                type: Output\n            }] } });\n\nclass StripeCardNumberComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    async ngOnChanges(changes) {\n        if (changes.options || changes.containerClass) {\n            this.setupElement('options');\n        }\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardNumber() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardNumber', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardNumberComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeCardNumberComponent, deps: [{ token: StripeElementsService }, { token: StripeCardGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardNumberComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripeCardNumberComponent, selector: \"ngx-stripe-card-number\", inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeCardNumberComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card-number',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeCardExpiryComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    async ngOnChanges(changes) {\n        if (changes.options || changes.containerClass) {\n            this.setupElement('options');\n        }\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardExpiry() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardExpiry', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardExpiryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeCardExpiryComponent, deps: [{ token: StripeElementsService }, { token: StripeCardGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardExpiryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripeCardExpiryComponent, selector: \"ngx-stripe-card-expiry\", inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeCardExpiryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card-expiry',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeCardCvcComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    async ngOnChanges(changes) {\n        if (changes.options || changes.containerClass) {\n            this.setupElement('options');\n        }\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardCvc() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardCvc', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardCvcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeCardCvcComponent, deps: [{ token: StripeElementsService }, { token: StripeCardGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardCvcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripeCardCvcComponent, selector: \"ngx-stripe-card-cvc\", inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeCardCvcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card-cvc',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeFpxBankComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n            updateElements = true;\n        }\n        if (changes.options || changes.containerClass || !this.element || updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n            this.createElement();\n            this.state = 'ready';\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getFpxBank() {\n        return this.element;\n    }\n    createElement(options = { accountHolderType: 'individual' }) {\n        this.element = this.elements.create('fpxBank', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeFpxBankComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeFpxBankComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeFpxBankComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripeFpxBankComponent, selector: \"ngx-stripe-fpx-bank\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeFpxBankComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-fpx-bank',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeIdealBankComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n            updateElements = true;\n        }\n        if (changes.options || changes.containerClass || !this.element || updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n            this.createElement();\n            this.state = 'ready';\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getIdealBank() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('idealBank', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeIdealBankComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeIdealBankComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeIdealBankComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripeIdealBankComponent, selector: \"ngx-stripe-ideal-bank\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeIdealBankComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-ideal-bank',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeIbanComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n            updateElements = true;\n        }\n        if (changes.options || changes.containerClass || !this.element || updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n            this.createElement();\n            this.state = 'ready';\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getIban() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('iban', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeIbanComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeIbanComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeIbanComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripeIbanComponent, selector: \"ngx-stripe-iban\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeIbanComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-iban',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeAuBankAccountComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n            updateElements = true;\n        }\n        if (changes.options || changes.containerClass || !this.element || updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n            this.createElement();\n            this.state = 'ready';\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getAuBankAccount() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('auBankAccount', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeAuBankAccountComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeAuBankAccountComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeAuBankAccountComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripeAuBankAccountComponent, selector: \"ngx-stripe-au-bank-account\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeAuBankAccountComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-au-bank-account',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripePaymentElementComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.doNotCreateUntilClientSecretIsSet = false;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.loaderror = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || changes.clientSecret || changes.appearance || !this.elements) {\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe, {\n                ...(this.elementsOptions || {}),\n                ...(this.appearance ? { appearance: this.appearance } : {}),\n                ...(this.clientSecret ? { clientSecret: this.clientSecret } : {})\n            })\n                .toPromise();\n            updateElements = true;\n        }\n        if (changes.options || changes.containerClass || !this.element || updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        return this.element.update(options);\n    }\n    collapse() {\n        return this.element.collapse();\n    }\n    fetchUpdates() {\n        return from(this.elements.fetchUpdates());\n    }\n    createElement(options = {}) {\n        try {\n            this.element = this.elements.create('payment', options);\n        }\n        catch (err) {\n            this.elements = null;\n            throw err;\n        }\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', (ev) => this.blur.emit(ev));\n        this.element.on('focus', (ev) => this.focus.emit(ev));\n        this.element.on('ready', (ev) => this.ready.emit(ev));\n        this.element.on('escape', (ev) => this.escape.emit(ev));\n        this.element.on('loaderror', (ev) => this.loaderror.emit(ev));\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripePaymentElementComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripePaymentElementComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripePaymentElementComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripePaymentElementComponent, selector: \"ngx-stripe-payment\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\", appearance: \"appearance\", clientSecret: \"clientSecret\", doNotCreateUntilClientSecretIsSet: \"doNotCreateUntilClientSecretIsSet\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\", loaderror: \"loaderror\" }, viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `<div class=\"field\" #stripeElementRef></div>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripePaymentElementComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-payment',\n                    template: `<div class=\"field\" #stripeElementRef></div>`\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], clientSecret: [{\n                type: Input\n            }], doNotCreateUntilClientSecretIsSet: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }], loaderror: [{\n                type: Output\n            }] } });\n\nclass StripePaymentRequestButtonComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.change = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.token = new EventEmitter();\n        this.paymentMethod = new EventEmitter();\n        this.source = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.shippingaddresschange = new EventEmitter();\n        this.shippingoptionchange = new EventEmitter();\n        this.notavailable = new EventEmitter();\n    }\n    async ngOnChanges(changes) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        const elementsOptions = this.elementsOptions;\n        const stripe = this.stripe;\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            const elements = await this.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n            this.elements = elements;\n            updateElements = true;\n        }\n        if (changes.paymentOptions && this.paymentRequest) {\n            this.updateRequest(this.paymentOptions);\n        }\n        if (changes.options || changes.containerClass || !this.element || updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.paymentRequest = this.stripeElementsService.paymentRequest(stripe, this.paymentOptions);\n                this.paymentRequest.on('token', (ev) => this.token.emit(ev));\n                if (this.paymentMethod.observed)\n                    this.paymentRequest.on('paymentmethod', (ev) => this.paymentMethod.emit(ev));\n                if (this.source.observed && !this.paymentMethod.observed)\n                    this.paymentRequest.on('source', (ev) => this.source.emit(ev));\n                this.paymentRequest.on('cancel', () => this.cancel.emit());\n                this.paymentRequest.on('shippingaddresschange', (ev) => this.shippingaddresschange.emit(ev));\n                this.paymentRequest.on('shippingoptionchange', (ev) => this.shippingoptionchange.emit(ev));\n                this.element = this.elements.create('paymentRequestButton', {\n                    paymentRequest: this.paymentRequest,\n                    ...options\n                });\n                this.canMakePayment().subscribe((result) => {\n                    if (result) {\n                        this.element.on('click', (ev) => this.change.emit(ev));\n                        this.element.on('blur', () => this.blur.emit());\n                        this.element.on('focus', () => this.focus.emit());\n                        this.element.on('ready', () => this.ready.emit());\n                        this.element.mount(this.stripeElementRef.nativeElement);\n                        this.load.emit({\n                            paymentRequestButton: this.element,\n                            paymentRequest: this.paymentRequest\n                        });\n                    }\n                    else {\n                        this.notavailable.emit();\n                    }\n                });\n            }\n        }\n    }\n    canMakePayment() {\n        return from(this.paymentRequest.canMakePayment());\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    updateRequest(options) {\n        const { currency, total, displayItems, shippingOptions } = options;\n        this.paymentRequest.update({\n            currency,\n            total,\n            displayItems,\n            shippingOptions\n        });\n    }\n    show() {\n        this.paymentRequest.show();\n    }\n    abort() {\n        this.paymentRequest.abort();\n    }\n    isShowing() {\n        return this.paymentRequest.isShowing();\n    }\n    /**\n     * @deprecated\n     */\n    getButton() {\n        return this.element;\n    }\n}\nStripePaymentRequestButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripePaymentRequestButtonComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripePaymentRequestButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: StripePaymentRequestButtonComponent, selector: \"ngx-stripe-payment-request-button\", inputs: { containerClass: \"containerClass\", paymentOptions: \"paymentOptions\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", change: \"change\", blur: \"blur\", focus: \"focus\", ready: \"ready\", token: \"token\", paymentMethod: \"paymentMethod\", source: \"source\", cancel: \"cancel\", shippingaddresschange: \"shippingaddresschange\", shippingoptionchange: \"shippingoptionchange\", notavailable: \"notavailable\" }, viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `<div class=\"field\" #stripeElementRef></div>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripePaymentRequestButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-payment-request-button',\n                    template: `<div class=\"field\" #stripeElementRef></div>`\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], paymentOptions: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], token: [{\n                type: Output\n            }], paymentMethod: [{\n                type: Output\n            }], source: [{\n                type: Output\n            }], cancel: [{\n                type: Output\n            }], shippingaddresschange: [{\n                type: Output\n            }], shippingoptionchange: [{\n                type: Output\n            }], notavailable: [{\n                type: Output\n            }] } });\n\nclass StripeFactoryService {\n    constructor(version, baseKey, baseOptions, loader, window) {\n        this.version = version;\n        this.baseKey = baseKey;\n        this.baseOptions = baseOptions;\n        this.loader = loader;\n        this.window = window;\n    }\n    create(key, options) {\n        if (!key && !this.baseKey) {\n            return null;\n        }\n        return new StripeInstance(this.version, this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n    }\n}\nStripeFactoryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeFactoryService, deps: [{ token: NGX_STRIPE_VERSION }, { token: STRIPE_PUBLISHABLE_KEY }, { token: STRIPE_OPTIONS }, { token: LazyStripeAPILoader }, { token: WindowRef }], target: i0.ɵɵFactoryTarget.Injectable });\nStripeFactoryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeFactoryService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: StripeFactoryService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_STRIPE_VERSION]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [STRIPE_PUBLISHABLE_KEY]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [STRIPE_OPTIONS]\n                }] }, { type: LazyStripeAPILoader }, { type: WindowRef }]; } });\n\nconst components = [\n    StripeCardComponent,\n    StripeCardNumberComponent,\n    StripeCardExpiryComponent,\n    StripeCardCvcComponent,\n    StripeFpxBankComponent,\n    StripeIdealBankComponent,\n    StripeIbanComponent,\n    StripeAuBankAccountComponent,\n    StripePaymentElementComponent,\n    StripePaymentRequestButtonComponent\n];\nconst directives = [StripeCardGroupDirective, NgxStripeElementLoadingTemplateDirective];\nconst currentVersion = '14.1.0';\nclass NgxStripeModule {\n    static forRoot(publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                StripeFactoryService,\n                StripeElementsService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                },\n                {\n                    provide: NGX_STRIPE_VERSION,\n                    useValue: currentVersion\n                }\n            ]\n        };\n    }\n    static forChild(publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                StripeFactoryService,\n                StripeElementsService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                },\n                {\n                    provide: NGX_STRIPE_VERSION,\n                    useValue: currentVersion\n                }\n            ]\n        };\n    }\n}\nNgxStripeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: NgxStripeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxStripeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.3\", ngImport: i0, type: NgxStripeModule, declarations: [StripeCardComponent,\n        StripeCardNumberComponent,\n        StripeCardExpiryComponent,\n        StripeCardCvcComponent,\n        StripeFpxBankComponent,\n        StripeIdealBankComponent,\n        StripeIbanComponent,\n        StripeAuBankAccountComponent,\n        StripePaymentElementComponent,\n        StripePaymentRequestButtonComponent, StripeCardGroupDirective, NgxStripeElementLoadingTemplateDirective], imports: [CommonModule], exports: [StripeCardComponent,\n        StripeCardNumberComponent,\n        StripeCardExpiryComponent,\n        StripeCardCvcComponent,\n        StripeFpxBankComponent,\n        StripeIdealBankComponent,\n        StripeIbanComponent,\n        StripeAuBankAccountComponent,\n        StripePaymentElementComponent,\n        StripePaymentRequestButtonComponent, StripeCardGroupDirective, NgxStripeElementLoadingTemplateDirective] });\nNgxStripeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: NgxStripeModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: NgxStripeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [...components, ...directives],\n                    exports: [...components, ...directives],\n                    imports: [CommonModule]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-stripe\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DocumentRef, LazyStripeAPILoader, NgxStripeElementLoadingTemplateDirective, NgxStripeModule, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY, StripeAuBankAccountComponent, StripeCardComponent, StripeCardCvcComponent, StripeCardExpiryComponent, StripeCardGroupDirective, StripeCardNumberComponent, StripeElementsService, StripeFactoryService, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeInstance, StripePaymentElementComponent, StripePaymentRequestButtonComponent, StripeService, WindowRef };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}